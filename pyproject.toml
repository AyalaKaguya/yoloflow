[project]
name = "yoloflow"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
keywords = ["vision", "cs.CV", "computer vision"]
license = { text = "Apache" }
dependencies = [
    "numpy>=2.2.6",
    "opencv-python-headless>=4.12.0.88",
    "pyside6>=6.9.1",
    "toml>=0.10.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.urls]
# 项目地址

[project.scripts]
yoloflow = "yoloflow.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "twine>=4.0",
]
test = ["pytest>=7.0", "pytest-cov>=4.0"]

[[tool.uv.index]]
url = "https://pypi.tuna.tsinghua.edu.cn/simple"
default = true

[tool.hatch.version]
path = "src/yoloflow/__version__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/yoloflow"]

[tool.hatch.build.targets.sdist]
include = ["/src", "/tests", "/README.md", "/LICENSE", "/pyproject.toml"]

[tool.black]
target-version = ['py313']
include = '\.pyi?$'
line-length = 88
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = "src"
python_files = ["test_*.py", "*_test.py"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
test = [
    "pytest-qt>=4.5.0",
]
